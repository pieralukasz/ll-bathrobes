CREATE TABLE IF NOT EXISTS "ll-bathrobes_basket_items" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "ll-bathrobes_basket_items_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"basket_id" integer NOT NULL,
	"product_id" integer NOT NULL,
	"quantity" integer NOT NULL
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "ll-bathrobes_baskets" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "ll-bathrobes_baskets_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"user_id" varchar(256) NOT NULL,
	"created_at" timestamp with time zone NOT NULL,
	"updated_at" timestamp with time zone
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "ll-bathrobes_categories" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "ll-bathrobes_categories_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"name" varchar(256) NOT NULL,
	CONSTRAINT "ll-bathrobes_categories_name_unique" UNIQUE("name")
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "ll-bathrobes_order_items" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "ll-bathrobes_order_items_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"order_id" integer NOT NULL,
	"product_id" integer NOT NULL,
	"quantity" integer NOT NULL
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "ll-bathrobes_orders" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "ll-bathrobes_orders_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"user_id" varchar(256) NOT NULL,
	"created_at" timestamp with time zone NOT NULL,
	"updated_at" timestamp with time zone
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "ll-bathrobes_products" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "ll-bathrobes_products_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"ean" varchar(13) NOT NULL,
	"name" varchar(256) NOT NULL,
	"category_id" integer NOT NULL,
	"color" varchar(50) NOT NULL,
	"size" varchar(50) NOT NULL,
	"quantity" integer NOT NULL,
	"created_at" timestamp with time zone NOT NULL,
	"updated_at" timestamp with time zone,
	CONSTRAINT "ll-bathrobes_products_ean_unique" UNIQUE("ean")
);
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "ll-bathrobes_basket_items" ADD CONSTRAINT "ll-bathrobes_basket_items_basket_id_ll-bathrobes_baskets_id_fk" FOREIGN KEY ("basket_id") REFERENCES "public"."ll-bathrobes_baskets"("id") ON DELETE cascade ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "ll-bathrobes_basket_items" ADD CONSTRAINT "ll-bathrobes_basket_items_product_id_ll-bathrobes_products_id_fk" FOREIGN KEY ("product_id") REFERENCES "public"."ll-bathrobes_products"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "ll-bathrobes_order_items" ADD CONSTRAINT "ll-bathrobes_order_items_order_id_ll-bathrobes_orders_id_fk" FOREIGN KEY ("order_id") REFERENCES "public"."ll-bathrobes_orders"("id") ON DELETE cascade ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "ll-bathrobes_order_items" ADD CONSTRAINT "ll-bathrobes_order_items_product_id_ll-bathrobes_products_id_fk" FOREIGN KEY ("product_id") REFERENCES "public"."ll-bathrobes_products"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "ll-bathrobes_products" ADD CONSTRAINT "ll-bathrobes_products_category_id_ll-bathrobes_categories_id_fk" FOREIGN KEY ("category_id") REFERENCES "public"."ll-bathrobes_categories"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "ean_idx" ON "ll-bathrobes_products" USING btree ("ean");